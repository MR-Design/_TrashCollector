@model _TrashCollector_DCC.Models.Customer

@{
    ViewBag.Title = "Edit weekly Pickup";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="container padding narrow text-center ">
    <div class="row">
        <div class="container-fluid text-center col-md-5 ">



            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.WeeklyPickUpDay, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WeeklyPickUpDay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WeeklyPickUpDay, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.ExtraPickUpComleted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExtraPickUpComleted, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExtraPickUpComleted, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.Fee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Fee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Fee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.IsSuspended, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsSuspended)
                        @Html.ValidationMessageFor(model => model.IsSuspended, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group" style="display:none;">
                Mark As Complited
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.WeeklyPickUpDayCompleted)
                        @Html.ValidationMessageFor(model => model.WeeklyPickUpDayCompleted, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <h3 class="narrow padding lead"> Enter pickup Date Please </h3> 

                    @Html.EditorFor(model => model.ExtraPickUp, new { htmlAttributes = new { @class = "form-control text-center  " } })
                    @Html.ValidationMessageFor(model => model.ExtraPickUp, "", new { @class = "text-danger  " })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Send" class="btn btn-outline-warning " />
                </div>
            </div>
        </div>
    </div>
</div>

            }


            <style>

                .padding {
                    padding: 3rem 0;
                }

                .narrow {
                    width: 85%;
                    margin: 0 auto;
                    padding-top: 1rem;
                }
                .btn{
                   margin-bottom:30%;
                }
            </style>
