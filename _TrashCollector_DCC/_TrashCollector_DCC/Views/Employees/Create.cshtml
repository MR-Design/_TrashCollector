@model _TrashCollector_DCC.Models.Employee

@{
    ViewBag.Title = "Create";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container-fluid text-center col-md-4">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group text-center">
            <p class="lead text-center "> First Name </p> <br />
            <div class=" text-center">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control text-center" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger text-center" })
            </div>
        </div>

        <div class="form-group">
            <p class="lead text-center "> Last Name </p> <br />
            <div class="text-center">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="lead text-center "> Email </p> <br />
            <div class="text-center">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="lead text-center "> Streest Address </p> <br />
            <div class="text-center">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="lead text-center "> City </p> <br />
            <div class="text-center">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="lead text-center "> State </p> <br />
            <div class="text-center">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="lead text-center "> Zip Code </p> <br />
            <div class="text-center">
                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 text-center">
                <input type="submit" value="Create" class="btn btn-outline-warning" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<style>

    .padding {
        padding: 3rem 0;
    }

    .narrow {
        width: 85%;
        margin: 0 auto;
        padding-top: 1rem;
    }

    .btn {
        margin-bottom: 5%;
    }
</style>